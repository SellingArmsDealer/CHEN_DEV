<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	"
	>
 	<!--<import resource="application-datasource.xml"/>-->
<!-- 配置spring注解事务 -->
	<!--<bean id="transactionManager"-->
		<!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->

	<!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--&lt;!&ndash; 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:mybatis/Configuration.xml"></property>-->
        <!--&lt;!&ndash;指定实体类映射文件，可以指定同时指定某一包以及子包下面的所有配置文件，mapperLocations和configLocation有一个即可，当需要为实体类指定别名时，可指定configLocation属性，再在mybatis总配置文件中采用mapper引入实体类映射文件 &ndash;&gt;-->
        <!--<property  name="mapperLocations"  value="classpath*:com/riying/oa/dao/mysqlxml/*.xml"/>-->
    <!--</bean>-->

    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
        <!--<constructor-arg index="0" ref="sqlSessionFactory" />-->
    <!--</bean>-->

	<import resource="application-service.xml"/>

    <!--<import resource="application-activiti.xml" />-->

    <!--<import resource="application-quartz.xml" />-->

	<import resource="application-mvc.xml" />

</beans>